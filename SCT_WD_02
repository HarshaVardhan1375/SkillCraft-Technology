<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Colorful StopWatch</title>
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: linear-gradient(270deg, #ff6ec4, #7873f5, #4ade80, #fbbf24);
            background-size: 800% 800%;
            animation: gradientBG 12s ease infinite;
            color: white;
        }

        @keyframes gradientBG {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            text-align: center;
            padding: 25px;
            border-radius: 15px;
            backdrop-filter: blur(12px);
            background: rgba(255, 255, 255, 0.1);
            box-shadow: 0 8px 25px rgba(0,0,0,0.3);
            width: 300px;
        }

        .timer {
            font-size: 3em;
            margin: 20px 0;
            color: #fff;
            text-shadow: 0 0 10px #ffeb3b, 0 0 20px #ffeb3b;
        }

        .buttons button {
            margin: 5px;
            padding: 10px 18px;
            font-size: 1em;
            border: none;
            cursor: pointer;
            border-radius: 8px;
            color: white;
            font-weight: bold;
            background: linear-gradient(135deg, #4facfe, #00f2fe);
            transition: 0.3s ease;
        }

        .buttons button:hover {
            transform: scale(1.08);
            box-shadow: 0 4px 15px rgba(0,0,0,0.3);
        }

        #b1 { background: linear-gradient(135deg, #4ade80, #22c55e); } /* Green */
        #b2 { background: linear-gradient(135deg, #ef4444, #dc2626); } /* Red */
        #b3 { background: linear-gradient(135deg, #a855f7, #7e22ce); } /* Purple */
        #b4 { background: linear-gradient(135deg, #f59e0b, #d97706); } /* Orange */

        #laps {
            list-style: none;
            padding: 0;
            margin-top: 15px;
            max-height: 150px;
            overflow-y: auto;
        }

        #laps li {
            background: rgba(255, 255, 255, 0.15);
            padding: 6px;
            margin: 4px;
            border-radius: 5px;
            animation: fadeIn 0.3s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-5px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>StopWatch</h1>
        <div class="timer" id="timer">00:00:00</div>
        <div class="buttons">
            <button id="b1">Start</button>
            <button id="b2">Pause</button>
            <button id="b3">Reset</button>
            <button id="b4">Laps</button>
        </div>
        <ul id="laps"></ul>
    </div>

    <script>
        let timer = document.getElementById("timer");
        let startBtn = document.getElementById("b1");
        let pauseBtn = document.getElementById("b2");
        let resetBtn = document.getElementById("b3");
        let lapBtn = document.getElementById("b4");
        let lapsContainer = document.getElementById("laps");

        let hours = 0, minutes = 0, seconds = 0;
        let interval;
        let running = false;

        function updateDisplay() {
            let h = String(hours).padStart(2, "0");
            let m = String(minutes).padStart(2, "0");
            let s = String(seconds).padStart(2, "0");
            timer.textContent = `${h}:${m}:${s}`;
        }

        function startTimer() {
            if (!running) {
                running = true;
                interval = setInterval(() => {
                    seconds++;
                    if (seconds === 60) {
                        seconds = 0;
                        minutes++;
                        if (minutes === 60) {
                            minutes = 0;
                            hours++;
                        }
                    }
                    updateDisplay();
                }, 1000);
            }
        }

        function pauseTimer() {
            running = false;
            clearInterval(interval);
        }

        function resetTimer() {
            running = false;
            clearInterval(interval);
            hours = minutes = seconds = 0;
            updateDisplay();
            lapsContainer.innerHTML = "";
        }

        function addLap() {
            if (running) {
                let li = document.createElement("li");
                li.textContent = timer.textContent;
                lapsContainer.appendChild(li);
            }
        }

        startBtn.addEventListener("click", startTimer);
        pauseBtn.addEventListener("click", pauseTimer);
        resetBtn.addEventListener("click", resetTimer);
        lapBtn.addEventListener("click", addLap);

        updateDisplay();
    </script>
</body>
</html>
